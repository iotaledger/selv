proto < ../../../proto/identity/credentials.proto
proto < ../../../proto/identity/utils.proto

@host=http://selv.local:5001/identity
###
{{
    const utils = require('../scripting/dist/bundle5.js');

    const credential_json = async () => {

        const { didDocument, keyPairs } = await utils.getDIDKey();
        const { id: did, authentication } = didDocument; 

        const issuer = "did:iota:rms:0xc57ab41995853d08d3f310aaf939048d25ba3d804bba636a2ecacee95b16c268";
        const credential = {
            "@context":[
                "https://www.w3.org/2018/credentials/v1",
                "https://www.w3.org/2018/credentials/examples/v1",
            ],
            type: ["VerifiableCredential","UniversityDegreeCredential"],
            issuanceDate:"2017-10-22T12:23:48Z",
            issuer,
            credentialSubject:{
                id: did,
                degree:{
                    type:"BachelorDegree",
                    name:"Bachelor of Science and Arts",
                }
            },
        }

        const credentialJson = JSON.stringify(JSON.stringify(credential));
        console.log(credentialJson);
        return credentialJson;
    }
    exports.credential_json = credential_json();
}}

GRPC /Jwt/create
{
    "credentialJson": {{credential_json}},
    "issuerFragment": "NMu3IKkVVMCiBwEpeWq9-mzmJbtS-vS9QDJ1v0pGbqw"
}
###

{{
    //pre request script
    exports.data = new TextEncoder().encode("test");
}}

GRPC /Signing/sign
{
    "data": {{data}},
    "keyId": "pK0JAYw5RFFKqorBn0x4w98zl2UBfRys"
}