proto < ../../../proto/user/user.proto

@host=http://selv.local:5001/backend
###
{{
    //pre request script
    exports.data = new TextEncoder().encode("test");
}}

GRPC /UsersService/ConnectUser
{
    "did": "did:key:z6MkfDvsiwx8ddaUitBuwxn8fCfyMZkK7ipQanMVS1FqvchE",
    "code": "a4e4aadf-90c7-4112-b00d-edb09496fc6e"
}
###
{{

const utils = require('../scripting/dist/bundle5.js');

const jwt = async () => {

    const { didDocument, keyPairs } = await utils.getDIDKey();
    const { id:did, authentication } = didDocument; 

    const header = {
        kid: `${authentication}`,
        alg: "EdDSA",
        typ: "JWT"
    }

    const encodedHeaders = Buffer.from(JSON.stringify(header), "utf8").toString("base64url");

    const claims = {
        "iss": did,
        "jti": "urn:uuid:3978344f-8596-4c3a-a978-8fcaba3903c5",
        "aud": "did:example:4a57546973436f6f6c4a4a57573",
        "nbf": Math.floor(Date.now() / 1000),
        "iat": Math.floor(Date.now() / 1000),
        "exp": Math.floor((Date.now() + 2 * (60 * 60 * 1000)) / 1000),
        "nonce": "343s$FSFDa-",
        "vp": {
            "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
            ],
            "type": [
            "VerifiablePresentation",
            "CredentialManagerPresentation"
            ],
            "verifiableCredential": [
                "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCIsImtpZCI6ImRpZDpleGFtcGxlOmFiZmUxM2Y3MTIxMjA0MzFjMjc2ZTEyZWNhYiNrZXlzLTEifQ.eyJzdWIiOiJkaWQ6ZXhhbXBsZTplYmZlYjFmNzEyZWJjNmYxYzI3NmUxMmVjMjEiLCJqdGkiOiJodHRwOi8vZXhhbXBsZS5lZHUvY3JlZGVudGlhbHMvMzczMiIsImlzcyI6Imh0dHBzOi8vZXhhbXBsZS5jb20va2V5cy9mb28uandrIiwibmJmIjoxNTQxNDkzNzI0LCJpYXQiOjE1NDE0OTM3MjQsImV4cCI6MTU3MzAyOTcyMywibm9uY2UiOiI2NjAhNjM0NUZTZXIiLCJ2YyI6eyJAY29udGV4dCI6WyJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy92MSIsImh0dHBzOi8vd3d3LnczLm9yZy8yMDE4L2NyZWRlbnRpYWxzL2V4YW1wbGVzL3YxIl0sInR5cGUiOlsiVmVyaWZpYWJsZUNyZWRlbnRpYWwiLCJVbml2ZXJzaXR5RGVncmVlQ3JlZGVudGlhbCJdLCJjcmVkZW50aWFsU3ViamVjdCI6eyJkZWdyZWUiOnsidHlwZSI6IkJhY2hlbG9yRGVncmVlIiwibmFtZSI6IjxzcGFuIGxhbmc9J2ZyLUNBJz5CYWNjYWxhdXLDqWF0IGVuIG11c2lxdWVzIG51bcOpcmlxdWVzPC9zcGFuPiJ9fX19.KLJo5GAyBND3LDTn9H7FQokEsUEi8jKwXhGvoN3JtRa51xrNDgXDb0cq1UTYB-rK4Ft9YVmR1NI_ZOF8oGc_7wAp8PHbF2HaWodQIoOBxxT-4WNqAxft7ET6lkH-4S6Ux3rSGAmczMohEEf8eCeN-jC8WekdPl6zKZQj0YPB1rx6X0-xlFBs7cl6Wt8rfBP_tZ9YgVWrQmUWypSioc0MUyiphmyEbLZagTyPlUyflGlEdqrZAv6eSe6RtxJy6M1-lD7a5HTzanYTWBPAUHDZGyGKXdJw-W_x0IWChBzI8t3kpG253fg6V3tPgHeKXE94fz_QpYfg--7kLsyBAfQGbg"
            ]
        }
    }

    const encodedPayload = Buffer.from(JSON.stringify(claims), "utf8").toString("base64url");

    const encodedSignature = await utils.sign(`${encodedHeaders}.${encodedPayload}`)

    const jwt = `${encodedHeaders}.${encodedPayload}.${encodedSignature}`;
    return jwt;
}
exports.jwt = jwt();
}}

GRPC /UsersService/PresentCredential
{
    "user": {
        "did": "test",
        "code": "52c05d44-9020-40b5-9c6d-7109e2d94996"
    },
    "vp": "{{jwt}}"
}
###
{{
    //pre request script
    exports.data = new TextEncoder().encode("test");
}}

GRPC /UsersService/RequestCredential
{
    "user": {
        "did": "test",
        "code": "063bf112-5e45-4529-a085-fd91c79d8837"
    },
    "unsignedCredentials": [
        {}
    ]
}