proto < ../../../shared/proto/user/user.proto

@host=http://selv.local:5001/backend
###
{{
    //pre request script
    exports.data = new TextEncoder().encode("test");
}}

GRPC /UsersService/ConnectUser
{
    "did": "did:key:z6MkfDvsiwx8ddaUitBuwxn8fCfyMZkK7ipQanMVS1FqvchE",
    "code": "8b6c5877-aab1-41a0-b1c7-acdc25b8527b"
}
###
{{

const utils = require('../scripting/dist/bundle5.js');

const jwt = async () => {

    const { didDocument, keyPairs } = await utils.getDIDKey();
    const { id:did, authentication } = didDocument; 

    const header = {
        kid: `${authentication}`,
        alg: "EdDSA",
        typ: "JWT"
    }

    const encodedHeaders = Buffer.from(JSON.stringify(header), "utf8").toString("base64url");

    const claims = {
        "iss": did,
        "jti": "urn:uuid:3978344f-8596-4c3a-a978-8fcaba3903c5",
        "aud": "did:example:4a57546973436f6f6c4a4a57573",
        "nbf": Math.floor(Date.now() / 1000),
        "iat": Math.floor(Date.now() / 1000),
        "exp": Math.floor((Date.now() + 2 * (60 * 60 * 1000)) / 1000),
        "nonce": "343s$FSFDa-",
        "vp": {
            "@context": [
            "https://www.w3.org/2018/credentials/v1",
            "https://www.w3.org/2018/credentials/examples/v1"
            ],
            "type": [
            "VerifiablePresentation",
            "CredentialManagerPresentation"
            ],
            "verifiableCredential": [
                "eyJraWQiOiJkaWQ6aW90YTpybXM6MHg4MDNjNjZjY2QzMzRhYTQxOTY2MThmNjZiYWVjZjBjNTRhYjFkMzI2NzYzM2ZlOTc1YWVmNTRmM2Q0ZDE2MWVkI2hRRWNZQzVhWGdIVXpaRHZPRmFUWi0xN3B3WVdmOHBZTXJkTFFoaGMzZ00iLCJ0eXAiOiJKV1QiLCJhbGciOiJFZERTQSJ9.eyJpc3MiOiJkaWQ6aW90YTpybXM6MHg4MDNjNjZjY2QzMzRhYTQxOTY2MThmNjZiYWVjZjBjNTRhYjFkMzI2NzYzM2ZlOTc1YWVmNTRmM2Q0ZDE2MWVkIiwibmJmIjoxNTA4Njc1MDI4LCJzdWIiOiJkaWQ6andrOmV5SmhiR2NpT2lKRlpFUlRRU0lzSW1OeWRpSTZJa1ZrTWpVMU1Ua2lMQ0pyYVdRaU9pSnNhMEZVTld4bU0wMDBUMVI1YUVGa1VsaGpUMncyY2tOMFREZHBZVnBzVGxJek5XSjRSUzAzZGs1aklpd2lhM1I1SWpvaVQwdFFJaXdpZUNJNklrZHlZMUJsVW1kaGRtdHVUMWRsTTJaeFV6QjFjblpKWTAwd2QwdHVORVZGVmtzMmVGcFhSbTE0UTBVaWZRIiwidmMiOnsiQGNvbnRleHQiOlsiaHR0cHM6Ly93d3cudzMub3JnLzIwMTgvY3JlZGVudGlhbHMvdjEiLCJodHRwczovL3d3dy53My5vcmcvMjAxOC9jcmVkZW50aWFscy9leGFtcGxlcy92MSJdLCJ0eXBlIjpbIlZlcmlmaWFibGVDcmVkZW50aWFsIiwiQ2l0aXplbkNyZWRlbnRpYWwiXSwiY3JlZGVudGlhbFN1YmplY3QiOnsiYmlydGhwbGFjZSI6Ik11c3RlcnN0YWR0IiwiY291bnRyeSI6Ikdlcm1hbnkiLCJkYXRlIjoiRGF0ZS5ub3coKSIsImZpcnN0TmFtZSI6IkJlbiIsImxhc3ROYW1lIjoiVXR6ZXIiLCJuYXRpb25hbGl0eSI6Imdlcm1hbiIsInBob25lIjoiMDAtMDAwMCJ9fX0.1ULDFIC-3ckBRuB-8P-1R-eZKgPlVEEwQpiDM8JjnVD4Mpx3FgPOkz0g5yruUoCbyygT88rTX-ax0-_GNegYAQ"
            ]
        }
    }

    const encodedPayload = Buffer.from(JSON.stringify(claims), "utf8").toString("base64url");

    const encodedSignature = await utils.sign(`${encodedHeaders}.${encodedPayload}`)

    const jwt = `${encodedHeaders}.${encodedPayload}.${encodedSignature}`;
    return jwt;
}
exports.jwt = jwt();
}}

GRPC /UsersService/PresentCredential
{
    "user": {
        "did": "did:key:z6MkfDvsiwx8ddaUitBuwxn8fCfyMZkK7ipQanMVS1FqvchE",
        "code": "57cb794d-74d8-4505-a076-e44264fce024"
    },
    "vp": "{{jwt}}"
}
###
{{
    //pre request script
    exports.data = new TextEncoder().encode("test");
}}

GRPC /UsersService/RequestCredential
{
    "user": {
        "did": "did:key:z6MkfDvsiwx8ddaUitBuwxn8fCfyMZkK7ipQanMVS1FqvchE",
        "code": "b5dc4074-d6c8-4e9e-a5be-abb956ff1c10"
    },
    "credentialDefinition": { 
        "type": [ "VerifiableCredential", "CitizenCredential" ]
    }
}