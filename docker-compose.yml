services:
  
  redis:
    image: redis:latest
    labels:
      traefik.enable: false

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
    expose:
      - '3000'
      - '50051'
    ports:
      - "127.0.0.1:3000:3000/tcp"
    # depends_on:
    #   - redis
    #   - identity
    environment:
      ISSUERS_BANK_DID: ${ISSUERS_BANK_DID}
      ISSUERS_BANK_FRAGMENT: ${ISSUERS_BANK_FRAGMENT}
      ISSUERS_GOVERNMENT_DID: ${ISSUERS_GOVERNMENT_DID}
      ISSUERS_GOVERNMENT_FRAGMENT: ${ISSUERS_GOVERNMENT_FRAGMENT}
      ISSUERS_INSURANCE_DID: ${ISSUERS_INSURANCE_DID}
      ISSUERS_INSURANCE_FRAGMENT: ${ISSUERS_INSURANCE_FRAGMENT}
  
  identity:
    image: iotaledger/identity-grpc:alpha
    environment:
      - API_ENDPOINT=https://api.testnet.shimmer.network
      - SNAPSHOT_PATH=/stronghold.hodl
      - STRONGHOLD_PWD_FILE=/run/secrets/stronghold_pwd
    volumes:
      - ./data/stronghold.hodl:/stronghold.hodl:ro
    expose:
     - '50051'
    labels:
      traefik.enable: false
    secrets:
      - stronghold_pwd

  oid4vc-tanglelabs:
    build:
      context: ./
      dockerfile: ./oid4vc/TangleLabs/Dockerfile
    environment:
      RP_DID: ${ISSUERS_BANK_DID}
      SIGNER_KEYID: ${ISSUERS_BANK_KEYID}
      KEY_FRAGMENT: ${ISSUERS_BANK_FRAGMENT}
      PUBLIC_URL: ${BANK_PUBLIC_URL}
    expose:
      - '3333'
      - '50051'
    ports:
      - "127.0.0.1:3333:3333/tcp"
    volumes:
      - ./shared:/usr/shared

  oid4vc-waltid:
    build:
      context: ./
      dockerfile: ./oid4vc/walt.id/Dockerfile
    expose:
      - '3000'
      - '50051'
    ports:
      - "127.0.0.1:3001:3000/tcp"
    volumes:
      - ./shared:/usr/shared

  oid4vc-impierce:
    image: impiercetechnologies/ssi-agent:fbec575
    depends_on:
      - cqrs-postgres-db
    expose:
      - '3033'
    ports:
      - "127.0.0.1:3033:3033/tcp"
    volumes:
      - ./shared:/usr/shared
      - ./data/stronghold.hodl:/stronghold.hodl:ro
      - ./oid4vc/impierce/event_publisher_config.yml:/app/agent_event_publisher_http/config.yml:ro
      - ./oid4vc/impierce/presentation_definitions:/app/agent_verification/presentation_definitions:ro
    entrypoint: [ '/bin/sh', '-c', 'export AGENT_CONFIG_STRONGHOLD_PASSWORD=$$(cat /run/secrets/stronghold_pwd) ; /usr/local/bin/agent_application' ]
    environment:
      AGENT_APPLICATION_URL: ${INSURANCE_PUBLIC_URL}
      AGENT_SECRET_MANAGER_STRONGHOLD_PATH: /stronghold.hodl
      AGENT_CONFIG_ISSUER_KEY_ID: ${ISSUERS_INSURANCE_KEYID}
      AGENT_CONFIG_ISSUER_DID: ${ISSUERS_INSURANCE_DID}
      AGENT_CONFIG_ISSUER_FRAGMENT: ${ISSUERS_INSURANCE_FRAGMENT}
      AGENT_CONFIG_DEFAULT_DID_METHOD: "did:iota:rms"
      #AGENT_CONFIG_LOG_FORMAT: json
      AGENT_CONFIG_EVENT_STORE: postgres
      AGENT_STORE_DB_CONNECTION_STRING: postgresql://demo_user:demo_pass@cqrs-postgres-db:5432/demo
    secrets:
      - stronghold_pwd

  cqrs-postgres-db:
    image: postgres
    restart: unless-stopped
    expose:
      - 5432
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    volumes:
      - "./oid4vc/impierce/db:/docker-entrypoint-initdb.d"

secrets:
  stronghold_pwd:
    file: data/stronghold_secret.txt
