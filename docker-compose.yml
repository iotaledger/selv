services:
  
  valkey:
    image: valkey/valkey:7.2.5
    restart: unless-stopped
    labels:
      traefik.enable: false

  backend:
    build:
      context: ./
      dockerfile: ./backend/Dockerfile
      args:
        REACT_APP_ISSUERS_GOVERNMENT_DID: ${ISSUERS_GOVERNMENT_DID}
        REACT_APP_ISSUERS_COMPANY_HOUSE_DID: ${ISSUERS_COMPANY_HOUSE_DID}
    expose:
      - '3000'
      - '50051'
    ports:
      - "127.0.0.1:3000:3000/tcp"
    # depends_on:
    #   - valkey
    #   - identity
    restart: unless-stopped
    environment:
      ISSUERS_GOVERNMENT_DID: ${ISSUERS_GOVERNMENT_DID}
      ISSUERS_GOVERNMENT_FRAGMENT: ${ISSUERS_GOVERNMENT_FRAGMENT}
      ISSUERS_COMPANY_HOUSE_DID: ${ISSUERS_COMPANY_HOUSE_DID}
      ISSUERS_COMPANY_HOUSE_FRAGMENT: ${ISSUERS_COMPANY_HOUSE_FRAGMENT}
  
  identity:
    image: iotaledger/identity-grpc:alpha
    restart: unless-stopped
    environment:
      - API_ENDPOINT=https://api.testnet.shimmer.network
      - SNAPSHOT_PATH=/stronghold.hodl
      - STRONGHOLD_PWD_FILE=/run/secrets/stronghold_pwd
    volumes:
      - ./data/stronghold.hodl:/stronghold.hodl:ro
    expose:
     - '50051'
    labels:
      traefik.enable: false
    secrets:
      - stronghold_pwd

  oid4vc-tanglelabs:
    build:
      context: ./
      dockerfile: ./oid4vc/TangleLabs/Dockerfile
    restart: unless-stopped
    environment:
      RP_DID: ${ISSUERS_GOVERNMENT_DID}
      SIGNER_KEYID: ${ISSUERS_GOVERNMENT_KEYID}
      KEY_FRAGMENT: ${ISSUERS_GOVERNMENT_FRAGMENT}
      PUBLIC_URL: ${GOVERNMENT_PUBLIC_URL}
    expose:
      - '3333'
      - '50051'
    ports:
      - "127.0.0.1:3333:3333/tcp"
    volumes:
      - ./shared:/usr/shared

  # oid4vc-waltid:
  #   build:
  #     context: ./
  #     dockerfile: ./oid4vc/walt.id/Dockerfile
  #   restart: unless-stopped
  #   expose:
  #     - '3000'
  #     - '50051'
  #   ports:
  #     - "127.0.0.1:3001:3000/tcp"
  #   volumes:
  #     - ./shared:/usr/shared

  oid4vc-impierce:
    image: impiercetechnologies/ssi-agent:fd8ed66
    depends_on:
      - cqrs-postgres-db
    restart: unless-stopped
    expose:
      - '3033'
    ports:
      - "127.0.0.1:3033:3033/tcp"
    volumes:
      - ./shared:/usr/shared
      - ./data/stronghold.hodl:/stronghold.hodl:ro
      - ./oid4vc/impierce/config.yml:/app/agent_application/config.yaml:ro
      - ./data/tmp:/app/agent_api_rest
    entrypoint: [ '/bin/sh', '-c', 'export UNICORE__SECRET_MANAGER__STRONGHOLD_PASSWORD=$$(cat /run/secrets/stronghold_pwd) ; /usr/local/bin/agent_application' ]
    environment:
      UNICORE__URL: ${COMPANY_HOUSE_PUBLIC_URL}
      UNICORE__SECRET_MANAGER__STRONGHOLD_PATH: /stronghold.hodl
      UNICORE__SECRET_MANAGER__ISSUER_ES256_KEY_ID: ${ISSUERS_COMPANY_HOUSE_KEYID}
      UNICORE__SECRET_MANAGER__ISSUER_DID: ${ISSUERS_COMPANY_HOUSE_DID}
      UNICORE__SECRET_MANAGER__ISSUER_FRAGMENT: ${ISSUERS_COMPANY_HOUSE_FRAGMENT}
      UNICORE__CORS_ENABLED: true
      #UNICORE__LOG_FORMAT: json
      UNICORE__EVENT_STORE__CONNECTION_STRING: postgresql://demo_user:demo_pass@cqrs-postgres-db:5432/demo
      #RUST_LOG: debug
    secrets:
      - stronghold_pwd

  cqrs-postgres-db:
    image: postgres
    restart: unless-stopped
    expose:
      - 5432
    environment:
      POSTGRES_DB: demo
      POSTGRES_USER: demo_user
      POSTGRES_PASSWORD: demo_pass
    volumes:
      - "./oid4vc/impierce/db:/docker-entrypoint-initdb.d"

secrets:
  stronghold_pwd:
    file: data/stronghold_secret.txt
