// Copyright 2020-2024 IOTA Stiftung
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";
package credentials;

// -- CREDENTIALS REVOCATION ---------------------------------------------

// The States a credential can be in.
enum RevocationStatus {
    REVOKED = 0;
    SUSPENDED = 1;
    VALID = 2;
}

message RevocationCheckRequest {
    string type = 1;
    string url = 2;
    map<string, string> properties = 3;
}

message RevocationCheckResponse {
    RevocationStatus status = 1;
}

service CredentialRevocation {
    // Checks whether a credential has been revoked with `RevocationBitmap2022`.
    rpc check(RevocationCheckRequest) returns (RevocationCheckResponse);
}

message JwtCreationRequest {
    string credential_json = 1;
    string issuer_fragment = 2;
}

message JwtCreationResponse {
    string jwt = 1;
}

service Jwt {
    // Encodes a given JSON credential into JWT, using the issuer's fragment to fetch the key from stronghold.
    rpc create(JwtCreationRequest) returns (JwtCreationResponse);
}

message VcValidationRequest {
    // JWT encoded credential.
    string credential_jwt = 1;
    // JSON encoded `StatusList2021Credential`, used for status checking.
    // If missing, status checking will be performed with `RevocationBitmap2022`.
    optional string status_list_credential_json = 2;
}

message VcValidationResponse {
    // JSON encoded credential (extracted from request's JWT).
    string credential_json = 1;
}

service VcValidation {
    // Performs encoding, syntax, signature, time constraints and status checking on the provided credential.
    rpc validate(VcValidationRequest) returns (VcValidationResponse);
}