// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.176.1
//   protoc               v3.12.4
// source: oid4vc/oid4vp.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { wrappers } from "protobufjs";
import { Observable } from "rxjs";
import { Struct } from "../google/protobuf/struct";

export const protobufPackage = "oid4vc";

export interface OID4VPRequestConfig {
  presentationDefinition: { [key: string]: any } | undefined;
  nonce?: string | undefined;
  state?: string | undefined;
}

export interface OID4VPRequest {
  uri: string;
  request: string;
}

export const OID_4_VC_PACKAGE_NAME = "oid4vc";

wrappers[".google.protobuf.Struct"] = { fromObject: Struct.wrap, toObject: Struct.unwrap } as any;

export interface OID4VPClient {
  createRequest(request: OID4VPRequestConfig): Observable<OID4VPRequest>;
}

export interface OID4VPController {
  createRequest(request: OID4VPRequestConfig): Promise<OID4VPRequest> | Observable<OID4VPRequest> | OID4VPRequest;
}

export function OID4VPControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["createRequest"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("OID4VP", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("OID4VP", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const OID_4_VP_SERVICE_NAME = "OID4VP";
